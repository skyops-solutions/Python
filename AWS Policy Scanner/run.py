#!/usr/bin/env python3
"""
–®–≤–∏–¥–∫–∏–π –∑–∞–ø—É—Å–∫ AWS IAM Policy Scanner
"""

import sys
import os

# –î–æ–¥–∞—Ç–∏ –ø–æ—Ç–æ—á–Ω—É –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—é –¥–æ —à–ª—è—Ö—É Python
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

# –Ü–º–ø–æ—Ä—Ç—É–≤–∞—Ç–∏ –æ—Å–Ω–æ–≤–Ω–∏–π CLI
from main import cli

if __name__ == '__main__':
    try:
        cli()
    except KeyboardInterrupt:
        print("\nüõë –°–∫–∞–Ω—É–≤–∞–Ω–Ω—è –ø–µ—Ä–µ—Ä–≤–∞–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º")
        sys.exit(1)
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞: {e}")
        sys.exit(1)

# ===============================
# test_policy.json - –¢–µ—Å—Ç–æ–≤–∞ –ø–æ–ª—ñ—Ç–∏–∫–∞
# ===============================
"""
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Action": "*",
      "Resource": "*"
    }
  ]
}
"""

# ===============================
# good_policy.json - –ü—Ä–∏–∫–ª–∞–¥ –≥–∞—Ä–Ω–æ—ó –ø–æ–ª—ñ—Ç–∏–∫–∏
# ===============================
"""
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Action": [
        "s3:GetObject",
        "s3:PutObject"
      ],
      "Resource": [
        "arn:aws:s3:::my-app-bucket/*"
      ],
      "Condition": {
        "Bool": {
          "aws:SecureTransport": "true"
        }
      }
    }
  ]
}
"""

# ===============================
# README_QUICK.md
# ===============================
"""
# üöÄ –®–≤–∏–¥–∫–∏–π —Å—Ç–∞—Ä—Ç AWS IAM Policy Scanner

## –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è
```bash
pip install boto3 click rich pyyaml
```

## –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è AWS
```bash
aws configure
# –∞–±–æ
export AWS_ACCESS_KEY_ID=your_key
export AWS_SECRET_ACCESS_KEY=your_secret
```

## üîç –û—Å–Ω–æ–≤–Ω—ñ –∫–æ–º–∞–Ω–¥–∏

### 1. –î–µ–º–æ —Ä–µ–∂–∏–º (–±–µ–∑ AWS –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è)
```bash
python run.py demo
```

### 2. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ñ–∞–π–ª—É –ø–æ–ª—ñ—Ç–∏–∫–∏
```bash
echo '{"Version":"2012-10-17","Statement":[{"Effect":"Allow","Action":"*","Resource":"*"}]}' > test.json
python run.py check-policy test.json
```

### 3. –ü–æ–∫–∞–∑–∞—Ç–∏ best practices
```bash
python run.py best-practices
```

### 4. –°–ø—Ä–∞–≤–∂–Ω—î —Å–∫–∞–Ω—É–≤–∞–Ω–Ω—è AWS (–ø–æ—Ç—Ä—ñ–±–Ω—ñ credentials)
```bash
python run.py scan
python run.py scan --severity HIGH
python run.py scan --profile production
```

### 5. –û–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—è –ø–æ–ª—ñ—Ç–∏–∫
```bash
python run.py optimize --days 30
```

## üìä –ü—Ä–∏–∫–ª–∞–¥ –≤–∏–≤–æ–¥—É

```
üìä –†–µ–∑—É–ª—å—Ç–∞—Ç–∏ —Å–∫–∞–Ω—É–≤–∞–Ω–Ω—è
AWS Account: 123456789012
–í—Å—å–æ–≥–æ –ø–æ–ª—ñ—Ç–∏–∫: 15
–ó–Ω–∞–π–¥–µ–Ω–æ –ø–æ—Ä—É—à–µ–Ω—å: 8

üî¥ –í–∏—Å–æ–∫–∏–π —Ä–∏–∑–∏–∫: 3
üü° –°–µ—Ä–µ–¥–Ω—ñ–π —Ä–∏–∑–∏–∫: 4
üîµ –ù–∏–∑—å–∫–∏–π —Ä–∏–∑–∏–∫: 1
```

## üéØ –©–æ –ø–µ—Ä–µ–≤—ñ—Ä—è—î

- ‚úÖ Admin access (*:* –¥–æ–∑–≤–æ–ª–∏)
- ‚úÖ Wildcard —Ä–µ—Å—É—Ä—Å–∏
- ‚úÖ –ù–µ–±–µ–∑–ø–µ—á–Ω—ñ –¥—ñ—ó
- ‚úÖ –í—ñ–¥—Å—É—Ç–Ω—ñ—Å—Ç—å MFA —É–º–æ–≤
- ‚úÖ –ù–∞–¥–ª–∏—à–∫–æ–≤—ñ –¥–æ–∑–≤–æ–ª–∏

## üîß –®–≤–∏–¥–∫—ñ —Ç–µ—Å—Ç–∏

1. **–¢–µ—Å—Ç –ø–æ–≥–∞–Ω–æ—ó –ø–æ–ª—ñ—Ç–∏–∫–∏:**
```bash
python run.py check-policy test_policy.json
```

2. **–¢–µ—Å—Ç –≥–∞—Ä–Ω–æ—ó –ø–æ–ª—ñ—Ç–∏–∫–∏:**
```bash
python run.py check-policy good_policy.json
```

3. **–î–µ–º–æ –≤—Å—ñ—Ö —Ñ—É–Ω–∫—Ü—ñ–π:**
```bash
python run.py demo
```
"""